#!/bin/bash

# go to project root
cd ../
# build ov
echo "packaging...."
mvn package 
# generate rust code
echo "generating rust code"
java -jar openvalidation-cli/target/openvalidation.jar \
--culture en \
--language rust \
--rule "name has to be Test and age must be greater than 34" \
--schema "{ name: Test, age: 23  }"  \
--output check.rs

echo "move code into crate"

cd ovtest/src/
echo "" > main.rs
# move code into lib.rs, but remove the test section
cat ../../HUMLFramework.rs | grep -B999 "#\[cfg(test)\]"  |  sed '$ d' >> main.rs

echo "
// note: this should be generated by openVALIDATION actually
pub fn HUMLValidator() {
    let mut huml = huml::HumlFrameWork::new();

    huml.append_rule(
        \"rule 1\",
        \"name has to be Peter and age must be greater than 34\",
        huml::RuleToggle::Enabled,
        vec![\"name\", \"age\"],
        &|model: &Model| huml::EQUALS(&model.age, &4) && huml::NOT_EQUALS(&\"a\", &\"n\")
    );
}


fn main() {
    HUMLValidator();
}" >> main.rs

echo "checking if code is valid..."
cargo check
echo "executing..."
cargo run
