package {{params.generated_class_namespace}};

{{#if params.single_file}}
    {{tmpl "frameworkimports"}}
{{/if}}


public class {{params.generated_class_name}} implements HUMLFramework.IOpenValidator
{
    public HUMLFramework huml;

    public {{params.generated_class_name}}()
    {
        huml = new HUMLFramework();

{{#if nullCheckRules}}
//pre validation null checks rules
{{#nullCheckRules}}        {{tmpl}}

{{/nullCheckRules}}
//++++++++++++++++++++++++++++++++
{{/if}}

{{#elements}}        {{tmpl}}

{{/elements}}

    }

    public String getValidatorID(){
        return {{#if params.validatorID}}"{{params.validatorID}}"{{else}}""{{/if}};
    }

    public HUMLFramework.OpenValidationSummary validate({{params.model_type}} model) {
        return huml.validate(model);
    }

    @Override
    public HUMLFramework.OpenValidationSummary validate(Object model) {
        return this.validate(({{params.model_type}})model);
    }

    {{#if params.single_file}}
        {{tmpl "framework"}}
    {{/if}}
}