################# DOCUMENTATION LISTS First and last element of a list FIRST and LAST function simple ########################

The FIRST number FROM my favourite numbers AS first favourite number

My first favourite number MUST NOT be 1

{favourite_numbers: [1, 2, 4, 8, 16]}

--------------  error triggered  -------------------

{favourite_numbers: [1, 2, 4, 8, 16]}

My first favourite number MUST NOT be 1



################# DOCUMENTATION LISTS First and last element of a list FIRST and LAST function with amount ########################

The FIRST 3 numbers from my favourite numbers AS Top 3


The FIRST FROM Top 3 AS first number

first number MUST NOT be 1


The LAST FROM Top 3 AS last number

last number MUST NOT be 4

{favourite_numbers: [1, 2, 4, 8, 16]}

--------------  first error triggered  -------------------

{favourite_numbers: [1, 2, 100, 8, 16]}

first number MUST NOT be 1

--------------  second error triggered  -------------------

{favourite_numbers: [100, 2, 4, 8, 16]}

last number MUST NOT be 4



################# DOCUMENTATION LISTS Filtering of lists with conditions WITH function simple ########################

All items FROM numbers WITH a value GREATER THAN 5 AS my list


The FIRST FROM my list AS first number

The first number MUST NOT be 6


The LAST FROM my list AS last number

The last number MUST NOT be 10

{numbers: [1,2,3,4,5,6,7,8,9,10]}

--------------  first error triggered  -------------------

{numbers: [1,2,3,4,5,6,7,8,9,100]}

The first number MUST NOT be 6

--------------  second error triggered  -------------------

{numbers: [1,2,3,4,5,100,7,8,9,10]}

The last number MUST NOT be 10



################# DOCUMENTATION LISTS FIRST and LAST in combination with conditions simple ########################

The FIRST number FROM my favourite numbers AS the best number

The FIRST number FROM my favourite numbers WITH a value GREATER THAN 2 AS X


the best number MUST NOT be 1

X MUST NOT be 4

{favourite_numbers: [1,2,4,8,16,32]}

--------------  first error triggered  -------------------

{favourite_numbers: [1,2,100,8,16,32]}

the best number MUST NOT be 1

--------------  second error triggered  -------------------

{favourite_numbers: [0,2,4,8,16,32]}

X MUST NOT be 4



################# DOCUMENTATION LISTS Defining custom lists 1 ########################

None, Bachelor und Master as degrees

The degree must be one of degrees

The degree must not be one of degrees

{degree: ""}

--------------  first error triggered  -------------------

{degree: Unknown}

The degree must be one of degrees

--------------  second error triggered  -------------------

{degree: None}

{degree: Bachelor}

{degree: Master}

The degree must not be one of degrees



################# DOCUMENTATION LISTS Defining custom lists 2 ########################

The degree must be one of None, Bachelor and Master

The degree must not be one of None, Bachelor and Master

{degree: ""}

--------------  first error triggered  -------------------

{degree: Unknown}

The degree must be one of None, Bachelor and Master

--------------  second error triggered  -------------------

{degree: None}

{degree: Bachelor}

{degree: Master}

The degree must not be one of None, Bachelor and Master



################# DOCUMENTATION LISTS Defining custom lists 3 ########################

Bachelor as bachelor degree

None, bachelor degree and master_degree as degrees

The degree must be one of degrees

The degree must not be one of degrees

{degree: "", master_degree: ""}

--------------  first error triggered  -------------------

{degree: Nix, master_degree: Master}

The degree must be one of degrees

--------------  second error triggered  -------------------

{degree: None, master_degree: Master}

{degree: Bachelor, master_degree: Master}

{degree: Master, master_degree: Master}

The degree must not be one of degrees



################# DOCUMENTATION LISTS Quantitative validation of lists 1 ########################

The age must be one of magic numbers

The age must not be one of magic numbers

{magic_numbers: [1], age: 1}

--------------  first error triggered  -------------------

{magic_numbers: [65,43,21], age: 87}

The age must be one of magic numbers

--------------  second error triggered  -------------------

{magic_numbers: [65,43,21], age: 65}

{magic_numbers: [65,43,21], age: 43}

{magic_numbers: [65,43,21], age: 21}

The age must not be one of magic numbers



################# DOCUMENTATION LISTS Quantitative validation of lists 2 ########################

The age must be 65, 43 oder 21

The age must not be 65, 43 oder 21

{age: 1}


--------------  first error triggered  -------------------

{age: 87}

The age must be 65, 43 oder 21

--------------  second error triggered  -------------------

{age: 65}

{age: 43}

{age: 21}

The age must not be 65, 43 oder 21



################# IGNORE DOCUMENTATION LISTS Filtering of lists with complex contents by property ########################

applicants.age AS age list


The FIRST FROM age list AS Peters age

The FIRST FROM age list WITH a value GREATER THAN 18 AS Klaus age

The LAST FROM age list AS Friedas age


Peters age MUST be GREATER THAN 0

Klaus age MUST be GREATER THAN 0

Friedas age MUST be GREATER THAN 0


{applicants: [
    {name: "Peter", age: 17},
    {name: "Klaus", age: 19},
    {name: "Frieda", age: 38}]}

--------------  first error triggered  -------------------

{applicants: [
    {name: "Peter", age: -1},
    {name: "Klaus", age: 19},
    {name: "Frieda", age: 38}]}

Peters age MUST be GREATER THAN 0

--------------  second error triggered  -------------------

{applicants: [
    {name: "Peter", age: 17},
    {name: "Klaus", age: -1},
    {name: "Frieda", age: 38}]}

Klaus age MUST be GREATER THAN 0

--------------  third error triggered  -------------------

{applicants: [
    {name: "Peter", age: 17},
    {name: "Klaus", age: 19},
    {name: "Frieda", age: -1}]}

Friedas age MUST be GREATER THAN 0